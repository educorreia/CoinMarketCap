// <auto-generated />
using System;
using Infraestrutura.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestrutura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240312153502_MigrationInicial")]
    partial class MigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dominio.CryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrency");
                });

            modelBuilder.Entity("Dominio.Entidades.CryptoCurrencyHistorical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("CirculatingSupply")
                        .HasColumnType("float");

                    b.Property<int>("CryptoId")
                        .HasColumnType("int");

                    b.Property<double?>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange1h")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange24h")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange30d")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange7d")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalSupply")
                        .HasColumnType("float");

                    b.Property<double?>("Volume24h")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrencyHistorical");
                });

            modelBuilder.Entity("Dominio.WeekCryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CryptoCurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("Percent24h")
                        .HasColumnType("float");

                    b.Property<double>("Percent30d")
                        .HasColumnType("float");

                    b.Property<double>("Percent7d")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDay")
                        .HasColumnType("datetime2");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("SaleDay")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CryptoCurrencyId");

                    b.ToTable("WeekCryptoCurrency");
                });

            modelBuilder.Entity("Dominio.WeekCryptoCurrency", b =>
                {
                    b.HasOne("Dominio.CryptoCurrency", "CryptoCurrency")
                        .WithMany()
                        .HasForeignKey("CryptoCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CryptoCurrency");
                });
#pragma warning restore 612, 618
        }
    }
}
